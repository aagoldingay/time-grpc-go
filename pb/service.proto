syntax = "proto3";

package pb;

// TimeRecord service definition
service TimeRecord {
	// Sends a time request to the server to complete a job request
	rpc CompleteTimer (TimeRequest) returns (Confirmation) {}

	// Sends a time request to the server to initiate a new job record
	rpc InitiateTimer (NewTimeRequest) returns (Confirmation) {}

	// Requests all timers made either today only, or all
	rpc ListTimers (ListRequest) returns (ListResponse) {}

	// Sends a time request to the server to run a timer
	rpc StartTimer (TimeRequest) returns (Confirmation) {}

	// Sends a time request to the server to update the status to started or paused
	rpc UpdateTimer (TimeRequest) returns (Confirmation) {}
}

enum JobStatus {
	NONE = 0;
	NEW = 1;
	STARTED = 2;
	PAUSED = 3;
	FINISHED = 4;
}

enum Error {
	NIL = 0;
	OK = 200;
	CREATED = 201;
	ACCEPTED = 202;
	BADREQUEST = 400;
	NOTFOUND = 404;
}

message Confirmation {
	int32 jobID = 1;
	JobStatus jobStatus = 2;
	Error error = 3;
}

message ListRequest {
	bool todayOnly = 1;
}

message ListResponse {
	repeated TimerResult result = 1;
}

message TimeRequest {
	int32 jobID = 1;
}

message TimerResult {
	int32 jobID = 1;
	JobStatus jobStatus = 2;
	double totalTime = 3;
}

message NewTimeRequest {
	bool new = 1;
}